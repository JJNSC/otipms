<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.otipms.dao.ProjectDao">
	
	<insert id="addProject" parameterType="Project">	
		<selectKey keyProperty="projectNo" resultType="int" order="BEFORE">
			select project_seq.nextval from dual <!-- 시퀀스의 다음 번호를 가지고온다. 그리고 다음단계=>세팅하기 -->
		</selectKey>
		INSERT 
		  INTO project (
		       projectNo
		     , projectName
		     , projectStartDate
		     , projectEndDate
		     , projectStatus
		     , projectCompanyName
		     , projectContent
		     , projectDeleted
		     , empId)
		VALUES (
		       #{projectNo}
		     , #{projectName}
		     , #{projectStartDate}
		     , #{projectEndDate}
		     , #{projectStatus}
		     , #{projectCompanyName}
		     , #{projectContent}
		     , #{projectDeleted}
		     , <if test="empId==0">
			     	null)	
		       </if>
		       <if test="empId!=0">
			       #{empId})
		       </if>
	</insert>
	
	<!-- 모든 프로젝트 select -->
	<select id="selectAllProject" resultType="Project">
		SELECT * 
		  FROM project 
		 WHERE 1=1
		   AND projectNo >0 
           AND projectDeleted = 0
 	  ORDER BY projectNo DESC
	</select>
	
	<select id="getEmployeeInfoByProjectNoAndTeamName" parameterType="Employee" resultType="Employee">
		SELECT e.empId
		     , e.empName
		     , e.empRank
		     , e.role
		     , eif.teamno
		     , eif.empTel
		     , eif.empEmail
		  FROM emp e 
		 INNER JOIN (
		       SELECT empId
		            , teamNo
		            , empTel
		            , empEmail
		         FROM empInfo 
		              ) eif 
		    ON e.empId = eif.empId 
		 WHERE eif.teamno IN (
		                SELECT teamNo 
		                  FROM team 
		                 WHERE projectNo = #{projectNo}
		                   AND teamName=#{teamName}
		                     )
	</select>
	
	<select id="selectProjectByProjectNo" parameterType="int" resultType="Project">
		select * from project where projectNo = #{projectNo}
	</select>
	
	<update id="updateProject" parameterType="Project">
		UPDATE PROJECT 
		   SET projectName = #{projectName}
		     , projectStartDate =#{projectStartDate}
		     , projectEndDate = #{projectEndDate}
		     , empId=#{empId}
		     , projectContent=#{projectContent}
		     , projectCompanyName=#{projectCompanyName}
		 WHERE 1=1
		   AND projectNo = #{projectNo}
	</update>
	
	<update id="updateProjectDeletedStatus" parameterType="Project">
		UPDATE project
		   SET projectDeleted = #{projectDeleted}
		 WHERE 1=1
		   AND projectNo = #{projectNo}
	</update>
	
	<select id="selectProjectNoByProjectName" parameterType="String" resultType="int">
		SELECT projectNo
		  FROM project
		 WHERE 1=1
		   AND projectName=#{projectName}
	</select>
	
	
</mapper>